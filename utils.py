def format_config(config, balance=None, is_demo=False):
    layout_map = {
        'square_center': '1:1',
        'square_top_brainrot_bottom': '1:1 + brainrot',
        'full_center': '16:9',
        'full_top_brainrot_bottom': '16:9 + brainrot',
        'face_track_9_16': '9:16'
    }
    video_map = {'gta': 'GTA', 'minecraft': 'Minecraft', None: '–Ω–µ—Ç'}
    sub_type_map = {'word-by-word': '–ø–æ –æ–¥–Ω–æ–º—É —Å–ª–æ–≤—É', 'phrases': '–ø–æ —Ñ—Ä–∞–∑–µ', 'no_subtitles': '–±–µ–∑ —Å—É–±—Ç–∏—Ç—Ä–æ–≤'}
    sub_style_map = {'white': '–±–µ–ª—ã–π', 'yellow': '–∂–µ–ª—Ç—ã–π', 'purple': '—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π', 'green': '–∑–µ–ª—ë–Ω—ã–π', None: '–Ω–µ—Ç'}
    shorts_number = config.get('shorts_number', '–ê–≤—Ç–æ')

    if shorts_number != 'auto':
        shorts_number_text = str(shorts_number)
        cost = shorts_number
    else:
        shorts_number_text = '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–µ—Ä—ë–º –ª—É—á—à–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã'
        cost = 1  # Assume 1 for 'auto' for display purposes

    if is_demo:
        balance_text = ""
    elif balance is not None:
        balance_text = f"<b>–í–∞—à –±–∞–ª–∞–Ω—Å</b>: {balance} —à–æ—Ä—Ç—Å–æ–≤\n"
    else:
        balance_text = ""

    settings_text = (
        f"<b>‚úÇÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–æ—Ä—Ç—Å–æ–≤</b>: {shorts_number_text}\n"
        f"<b>üìê –§–æ—Ä–º–∞—Ç</b>: {layout_map.get(config.get('layout'), '–ù–µ –≤—ã–±—Ä–∞–Ω–æ')}\n"
        f"<b>üß† Brainrot</b>: {video_map.get(config.get('bottom_video'), '–≤—ã–∫–ª—é—á–µ–Ω')}\n"
        f"<b>üî§ –°—É–±—Ç–∏—Ç—Ä—ã</b>: {sub_type_map.get(config.get('subtitles_type'), '–ù–µ –≤—ã–±—Ä–∞–Ω–æ')}\n"
    )
    if config.get('subtitles_type') != 'no_subtitles':
        settings_text += f"<b>üé® –¶–≤–µ—Ç —Å—É–±—Ç–∏—Ç—Ä–æ–≤</b>: {sub_style_map.get(config.get('subtitle_style'), '–ù–µ –≤—ã–±—Ä–∞–Ω–æ')}\n"
        
    settings_text += f"\n{balance_text}" if balance_text else ""

    return settings_text

def format_seconds_to_hhmmss(seconds):
    seconds = float(seconds)
    h = int(seconds // 3600)
    m = int((seconds % 3600) // 60)
    s = seconds % 60
    return f"{h:02d}:{m:02d}:{s:04.1f}"

def to_seconds(t: str) -> float:
    h, m, s_part = t.split(':')
    s = float(s_part)
    return int(h) * 3600 + int(m) * 60 + s
